[package]
name = "strict-path"
version = "0.1.0-beta.2"
edition = "2021"
# Minimum supported Rust version (MSRV)
rust-version = "1.71"
authors = ["David Krasnitsky <dikaveman@gmail.com>"]
description = "Stop path attacks before they happen. This crate makes sure file paths can't escape where you want them to go"
license = "MIT OR Apache-2.0"
repository = "https://github.com/DK26/strict-path-rs"
homepage = "https://github.com/DK26/strict-path-rs"
documentation = "https://docs.rs/strict-path"
# Complete guide and examples: https://dk26.github.io/strict-path-rs/
readme = "../README.md"
keywords = ["path", "security", "jail", "filesystem", "traversal"]
categories = ["filesystem", "development-tools", "web-programming"]
# The path is now relative to the workspace root
exclude = ["../demos/**"]

[dependencies]
soft-canonicalize = { version = "0.3.6", features = ["anchored"] }
serde = { version = "1", optional = true, default-features = false, features = [
    "alloc",
] }
dirs = { version = "6.0.0", optional = true }
tempfile = { version = "3.22", optional = true }
app-path = { version = "1.1.2", optional = true }

[dev-dependencies]
tempfile = "3.20"
serde = { version = "1", features = ["derive"] }
serde_json = "1"

[features]
default = []
# Enable serde Serialize impls (and helpers) for core types.
serde = ["dep:serde"]
# Convenience restriction constructors for system directories (config/data/cache)
dirs = ["dep:dirs"]
# Temporary directories with RAII (unique dir per restriction) via `tempfile`
tempfile = ["dep:tempfile"]
# Portable application directory restrictions
app-path = ["dep:app-path"]
